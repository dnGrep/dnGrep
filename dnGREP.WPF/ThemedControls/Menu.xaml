<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="ThemedMenuItem" TargetType="{x:Type MenuItem}">
        <Style.Resources>
            <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
        </Style.Resources>
        <Setter Property="Foreground" Value="{DynamicResource Menu.Item.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource Menu.Normal.Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <!--  Border 1  -->
                    <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent"
                            BorderThickness="1" SnapsToDevicePixels="False">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0" Width="Auto" MinWidth="28"
                                                  SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition x:Name="Col3" Width="14" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="VericalSeparator" Grid.Column="0" Margin="0,-2"
                                    BorderThickness="0,0,1,0"
                                    BorderBrush="{DynamicResource Menu.Separator.Border}">
                                <ContentPresenter x:Name="Icon" Margin="2,0,2,0" VerticalAlignment="Center"
                                                  ContentSource="Icon" />
                            </Border>

                            <Border x:Name="GlyphPanel" Width="18" Height="18"
                                    Margin="2,0,2,0" HorizontalAlignment="Center" Visibility="Collapsed"
                                    Background="{DynamicResource Menu.CheckMark.Background}"
                                    BorderBrush="{DynamicResource Menu.CheckMark.Border}"
                                    BorderThickness="1" CornerRadius="0">

                                <Path x:Name="Glyph" Width="9" Height="11"
                                      HorizontalAlignment="Center"
                                      Fill="{DynamicResource Menu.CheckMark.Foreground}"
                                      FlowDirection="LeftToRight"
                                      Data="{StaticResource Checkmark}" />
                            </Border>

                            <ContentPresenter x:Name="HeaderHost" Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" />

                            <ContentPresenter x:Name="IGTHost" Grid.Column="2" Margin="8,1,8,1"
                                              VerticalAlignment="Center" ContentSource="InputGestureText" />

                            <Grid x:Name="ArrowPanel" Grid.Column="3" Margin="4,0,6,0"
                                  VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M0,0 L0,8 L4,4 z" />
                            </Grid>
                            <Popup x:Name="SubMenuPopup"
                                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Right" HorizontalOffset="-1" Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                   AllowsTransparency="True">
                                <Grid Margin="0,0,5,5">
                                    <!--  Border 2  -->
                                    <Border x:Name="SubMenuBorder"
                                            BorderBrush="{DynamicResource Menu.SubMenu.Border}"
                                            BorderThickness="1"
                                            Background="{DynamicResource Menu.SubMenu.Item.Background}"
                                            SnapsToDevicePixels="True"
                                            Effect="{DynamicResource Menu.DropShadowEffect}">

                                        <Grid x:Name="SubMenu" Margin="2" Grid.IsSharedSizeScope="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Grid>
                                    </Border>
                                    <!--  Border 3  -->
                                    <Border x:Name="TransitionBorder" Width="0" Height="2"
                                            Margin="1,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"
                                            Background="{DynamicResource Menu.SubMenu.Item.Background}"
                                            SnapsToDevicePixels="False" BorderThickness="1"
                                            BorderBrush="{DynamicResource Menu.SubMenu.Item.Background}" />
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  A menu entry with check mark cannot have an icon  -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  Header for top-level menus.  -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,0,6,2" />
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                            <Setter TargetName="Col0" Property="MinWidth" Value="0" />
                            <Setter TargetName="Col3" Property="Width" Value="Auto" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SubMenuBorder" Property="BorderThickness" Value="1,1,1,1" />
                            <Setter TargetName="SubMenu" Property="Margin" Value="2,3,2,2" />
                            <Setter TargetName="TransitionBorder" Property="Width" Value="{Binding ActualWidth, ElementName=Grid}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Menu.TopLevel.Background}" />
                            <Setter TargetName="VericalSeparator" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <!--  Top-level menu item that can invoke commands.  -->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,0,6,2" />
                            <Setter TargetName="Col0" Property="MinWidth" Value="0" />
                            <Setter TargetName="Col3" Property="Width" Value="Auto" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="VericalSeparator" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <!--  Header for a submenu.  -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="10,3,0,3" />
                            <Setter TargetName="Border" Property="MinHeight" Value="22" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Menu.SubMenu.Item.Background}" />
                        </Trigger>
                        <!--  Menu item in a submenu that can invoke commands  -->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="10,3,0,3" />
                            <Setter TargetName="Border" Property="MinHeight" Value="22" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Menu.SubMenu.Item.Background}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="TopLevelHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Menu.Item.Highlighted.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Menu.Item.Highlighted.Border}" />
                            <Setter Property="Foreground" Value="{DynamicResource Menu.Item.Highlighted.Foreground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="TopLevelItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Menu.Item.Highlighted.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Menu.Item.Highlighted.Border}" />
                            <Setter Property="Foreground" Value="{DynamicResource Menu.Item.Highlighted.Foreground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <!--  Highlight an item (that holds a sub-menu) on mouseover  -->
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="SubmenuHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Menu.SubMenu.Item.Highlighted.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Menu.SubItem.Item.Highlighted.Border}" />
                            <Setter Property="Foreground" Value="{DynamicResource Menu.Item.Highlighted.Foreground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="SubmenuItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Menu.SubMenu.Item.Highlighted.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Menu.SubItem.Item.Highlighted.Border}" />
                            <Setter Property="Foreground" Value="{DynamicResource Menu.SubMenu.Item.Highlighted.Foreground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSubmenuOpen" Value="true" />
                                <Condition Property="Role" Value="TopLevelHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Menu.Item.Highlighted.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Menu.SubMenu.Border}" />
                            <!--  Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/  -->
                        </MultiTrigger>
                        <Trigger Property="IsSubmenuOpen" Value="true">
                            <Setter TargetName="ArrowPanelPath" Property="Fill" Value="{DynamicResource Menu.Item.Selected.Background}" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Menu.Item.Disabled.Foreground}" />
                            <Setter TargetName="GlyphPanel" Property="Background" Value="{DynamicResource Menu.CheckMark.Disabled.Background}" />
                            <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="{DynamicResource Menu.CheckMark.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Source: http://www.codeproject.com/Articles/442856/Visual-Studio-2012-Metro-Styles-for-WPF  -->
    <Style x:Key="ThemedMenu" TargetType="{x:Type Menu}">
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                <Setter Property="Height" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Border Margin="28,0,0,0" BorderBrush="{DynamicResource Menu.Separator.Border}" BorderThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ThemedMenuItem}" />
        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource Menu.Normal.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Menu.Item.Foreground}" />
    </Style>

    <Style x:Key="ThemedContextMenu" TargetType="{x:Type ContextMenu}">
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                <Setter Property="Height" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Border Margin="28,0,0,0" BorderBrush="{DynamicResource Menu.Separator.Border}" BorderThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ThemedMenuItem}" />
        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource Menu.Normal.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Menu.Normal.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource Menu.Item.Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Uid="Border_93">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource Menu.Context.Shadow.Background}" />
                                        <Setter Property="Padding" Value="0,0,5,5" />
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="4" Opacity="0.8" ShadowDepth="1" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border Uid="Border_50"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource Menu.SubMenu.Item.Background}">
                            <ScrollViewer Uid="ScrollViewer_9" CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ItemsPresenter Uid="ItemsPresenter_5"
                                                Margin="{TemplateBinding Padding}"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ThemedMenu}" TargetType="{x:Type Menu}" />
    <Style BasedOn="{StaticResource ThemedContextMenu}" TargetType="{x:Type ContextMenu}" />

</ResourceDictionary>