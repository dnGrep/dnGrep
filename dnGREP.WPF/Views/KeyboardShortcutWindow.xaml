<my:ThemedWindow x:Class="dnGREP.WPF.KeyboardShortcutWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:l="clr-namespace:dnGREP.Localization;assembly=dnGREP.Localization"
                 xmlns:my="clr-namespace:dnGREP.WPF"
                 mc:Ignorable="d"
                 Title="{l:Loc Key='Keyboard_KeyboardShortcuts'}"
                 MinWidth="500"
                 MinHeight="300"
                 d:DesignHeight="400"
                 FlowDirection="{Binding CultureFlowDirection}"
                 FontFamily="{Binding ApplicationFontFamily}"
                 FontSize="{Binding DialogFontSize}"
                 my:DiginesisHelpProvider.HelpKeyword="Keyboard"
                 my:DiginesisHelpProvider.HelpNavigator="Topic"
                 my:DiginesisHelpProvider.ShowHelp="True"
                 ResizeMode="CanResize"
                 SizeToContent="Width"
                 my:ChromeButtonExtension.ButtonVisibility="MinimizeHidden"
                 Background="{DynamicResource Dialog.Background}"
                 CaptionBackground="{DynamicResource Caption.Dialog.Background}"
                 Icon="/dnGREP;component/nGREP.ico"
                 WindowStartupLocation="CenterOwner">

    <Window.Resources>
        <Style TargetType="TextBlock" BasedOn="{StaticResource LabelTextBlockStyle}">
            <Setter Property="Margin" Value="3" />
        </Style>
        
        <Style TargetType="Label" BasedOn="{StaticResource ThemedLabel}">
            <Setter Property="Padding" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource Button.Disabled.Foreground}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource FormButtonStyle}">
            <Setter Property="Padding" Value="6,1" />
            <Setter Property="Margin" Value="3" />
        </Style>

    </Window.Resources>

    <DockPanel LastChildFill="True" Margin="8">

        <Grid DockPanel.Dock="Bottom"
              Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0"
                   Content="{l:Loc Key='Keyboard_ShortcutForSelectedCommand'}"
                   FontWeight="SemiBold"/>

            <Button Grid.Row="0" Grid.Column="1" Grid.RowSpan="2"
                    VerticalAlignment="Bottom"
                    Content="{l:Loc Key='Keyboard_Remove'}"
                    Command="{Binding SelectedCommand.RemoveGestureCommand}"/>

            <Label Grid.Row="1" Grid.Column="0"
                   Content="{l:Loc Key='Keyboard_PressShortcutKeys'}"/>

            <TextBox Grid.Row="2" Grid.Column="0"
                     Margin="3,3,12,3"
                     HorizontalAlignment="Stretch"
                     TextAlignment="Left"
                     VerticalAlignment="Center"
                     Text="{Binding SelectedCommand.LocalizedProposedKeyGesture}" 
                     PreviewKeyDown="TextBox_PreviewKeyDown"/>
            
            <Button Grid.Row="2" Grid.Column="1" 
                    Content="{l:Loc Key='Keyboard_Assign'}"
                    Command="{Binding SelectedCommand.AssignGestureCommand}"/>
            
            <Label Grid.Row="3" Grid.Column="0"
                   Content="{l:Loc Key='Keyboard_ShortcutCurrentlyUsedBy'}"/>
            
            <TextBox Grid.Row="4" Grid.Column="0"
                     HorizontalAlignment="Stretch"
                     Margin="3,3,12,3"
                     TextAlignment="Left"
                     VerticalAlignment="Center"
                     IsReadOnly="True"
                     Text="{Binding SelectedCommand.DuplicateCommandName}"/>

            <Button Grid.Row="5" Grid.Column="0"
                    Margin="3,18,3,3"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Content="{l:Loc Key='Keyboard_ResetAllToDefaults'}"
                    Command="{Binding Path=ResetCommand}" />
            
            <DockPanel Grid.Row="6" Grid.Column="0"
                       VerticalAlignment="Bottom">

                <Label Content="{l:Loc Key='Keyboard_PressF1ForHelpOnKeyboardShortcuts'}"
                       HorizontalAlignment="Left"/>

                <Button DockPanel.Dock="Right"
                        HorizontalAlignment="Right"
                        Content="{l:Loc Key='Keyboard_Save'}"
                        IsDefault="True" 
                        Command="{Binding Path=SaveCommand}" />
            </DockPanel>
            
            <Button Grid.Row="6" Grid.Column="1" 
                    Content="{l:Loc Key='Keyboard_Close'}"
                    IsCancel="True" />

        </Grid>
        
        <DataGrid x:Name="dataGrid"
                  Grid.Row="1" Margin="3"
                  ItemsSource="{Binding Commands}"
                  SelectedValue="{Binding SelectedCommand}"
                  AutoGenerateColumns="False" 
                  SelectionMode="Single" 
                  SelectionUnit="FullRow"
                  CanUserResizeColumns="True"
                  Style="{StaticResource ThemedDataGrid}"
                  ColumnHeaderStyle="{StaticResource ThemedDataGridColumnHeader}"
                  CellStyle="{StaticResource ThemedDataGridCell}"
                  RowHeaderStyle="{StaticResource ThemedDataGridRowHeader}"
                  HorizontalGridLinesBrush="{DynamicResource DataGrid.GridLine}"
                  VerticalGridLinesBrush="{DynamicResource DataGrid.GridLine}">

            <DataGrid.Columns>
                <DataGridTextColumn MinWidth="100" Header="{l:Loc Key='Keyboard_WindowHeader'}" IsReadOnly="True"
                                    Binding="{Binding CategoryName}" />
                <DataGridTextColumn MinWidth="100" Header="{l:Loc Key='Keyboard_LabelHeader'}" IsReadOnly="True"
                                    Binding="{Binding Label}" />
                <DataGridTextColumn MinWidth="100" Header="{l:Loc Key='Keyboard_CommandHeader'}" IsReadOnly="True"
                                    Binding="{Binding CommandShortName}" />
                <DataGridTextColumn MinWidth="100" Header="{l:Loc Key='Keyboard_ShortcutKeyHeader'}" IsReadOnly="True"
                                    Binding="{Binding LocalizedKeyGesture}" />
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource ThemedDataGridRow}">
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>

    </DockPanel>
</my:ThemedWindow>
