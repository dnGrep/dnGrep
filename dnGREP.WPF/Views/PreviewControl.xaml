<UserControl x:Class="dnGREP.WPF.PreviewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:my="clr-namespace:dnGREP.WPF"
             xmlns:l="clr-namespace:dnGREP.Localization;assembly=dnGREP.Localization"
             xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DesignHeight="300"
             d:DesignWidth="600"
             FlowDirection="{Binding CultureFlowDirection}"
             FontFamily="{Binding ApplicationFontFamily}"
             FontSize="{Binding MainFormFontSize}"
             mc:Ignorable="d"
             my:InputBindingsBehavior.InputBindings="{Binding InputBindings}">

    <UserControl.Resources>
        <my:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" TrueValue="Visible" FalseValue="Collapsed" />
        <my:TitleFontSizeConverter x:Key="TitleSizeConverter"/>
        <my:EnumBooleanConverter x:Key="ebc" />
        <Style TargetType="Label">
            <Setter Property="FontSize">
                <Setter.Value>
                    <Binding Path="MainFormFontSize" Converter="{StaticResource TitleSizeConverter}" ConverterParameter="2" FallbackValue="14"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ThemedContextMenu}">
            <Setter Property="FontFamily" Value="{Binding ApplicationFontFamily}"/>
            <Setter Property="FontSize" Value="{Binding MainFormFontSize}"/>
        </Style>

        <HierarchicalDataTemplate DataType="{x:Type my:MenuItemViewModel}" 
                                  ItemsSource="{Binding Path=Children, UpdateSourceTrigger=PropertyChanged}"/>
    </UserControl.Resources>

    <Border BorderBrush="{DynamicResource Control.Static.Border}" BorderThickness="0,1,0,0" Margin="3,0">
        <DockPanel>
            <DockPanel Name="previewPanel" DockPanel.Dock="Top"
                       Background="{DynamicResource StatusBar.Static.Background}"
                       Visibility="{Binding Path=IsLargeOrBinary, Converter={StaticResource BoolToVisibilityConverter}}">
                <Label VerticalContentAlignment="Center" Content="{l:Loc Key='Preview_ThisFileIsEitherBinaryOrTooLargeToPreview'}" Foreground="{DynamicResource StatusBar.Static.Foreground}" />
                <Button Margin="3" Padding="6" HorizontalAlignment="Right"
                        Content="{l:Loc Key='Preview_PreviewAnyway'}" 
                        FontSize="{Binding MainFormFontSize, Converter={StaticResource TitleSizeConverter}, ConverterParameter=2, FallbackValue=14}" 
                        Click="Button_Click" />
            </DockPanel>
            <Label VerticalContentAlignment="Center" DockPanel.Dock="Top"
                   Content="{l:Loc Key='Preview_HighlightsDisabledTooManyMatchesFound'}"
                   Background="{DynamicResource StatusBar.Static.Background}"
                   Foreground="{DynamicResource StatusBar.Static.Foreground}"
                   Visibility="{Binding HighlightDisabled, Converter={StaticResource BoolToVisibilityConverter}}" />
            <WrapPanel Name="statusBar" DockPanel.Dock="Bottom"
                       Margin="3" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding PreviewZoomWndVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Text="{l:Loc Key='Preview_Zoom'}" Margin="0,0,3,0" 
                               HorizontalAlignment="Center" 
                               VerticalAlignment="Center"
                               Style="{DynamicResource LabelTextBlockStyle}"/>
                    <Slider Name="zoomSlider" Width="200" Margin="0,0,3,0"
                            HorizontalAlignment="Right" VerticalAlignment="Center"
                            VerticalContentAlignment="Center" ToolTip="{l:Loc Key='Preview_ChangesTextEditorZoom'}" 
                            Minimum="9" Maximum="30" Value="12" />
                </StackPanel>
                <CheckBox Name="cbWrapText" Content="{l:Loc Key='Preview_WrapText'}"
                          Margin="3,0,3,0" VerticalAlignment="Center"
                          VerticalContentAlignment="Center"
                          Visibility="{Binding WrapTextPreviewWndVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <CheckBox Content="{l:Loc Key='Preview_ViewWhitespace'}"
                          Margin="3,0,3,0" VerticalAlignment="Center"
                          VerticalContentAlignment="Center"
                          IsChecked="{Binding ViewWhitespace}"
                          Visibility="{Binding ViewWhitespacePreviewWndVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <Button Margin="3" Padding="8,3" MinWidth="80"
                        Click="SyntaxButton_Click"
                        ToolTip="{l:Loc Key='Preview_Syntax'}"
                        Visibility="{Binding SyntaxPreviewWndVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button.Content>
                        <TextBlock >
                            <Run Text="{Binding CurrentSyntax, FallbackValue=None}"/>
                            <Run Text=" ⏷"/>
                        </TextBlock>
                    </Button.Content>
                    <Button.ContextMenu>
                        <ContextMenu x:Name="syntaxContextMenu"
                                     ItemsSource="{Binding Path=SyntaxItems, UpdateSourceTrigger=PropertyChanged}">
                            <ContextMenu.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ThemedMenuItem}">
                                    <Setter Property="Header" Value="{Binding Header}"/>
                                    <Setter Property="Command" Value="{Binding Command}"/>
                                    <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
                                    <Setter Property="IsCheckable" Value="{Binding IsCheckable}"/>
                                </Style>
                            </ContextMenu.ItemContainerStyle>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
            </WrapPanel>
            <ae:TextEditor Name="textEditor" Style="{StaticResource ThemedMarkerTextEditor}"
                           FontFamily="{Binding ResultsFontFamily}"
                           FontSize="{Binding ElementName=zoomSlider, Path=Value}"
                           Foreground="{DynamicResource PreviewText.Foreground}"
                           Background="{DynamicResource PreviewText.Background}"
                           ShowLineNumbers="True" IsReadOnly="True"
                           ScrollViewer.PanningMode="Both"
                           WordWrap="{Binding ElementName=cbWrapText, Path=IsChecked}">
                <ae:TextEditor.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{l:Loc Key='TextBox_Command_Copy'}" 
                                  InputGestureText="{x:Static my:TextBoxCommands.CopyGesture}" 
                                  Command="Copy"/>
                        <Separator/>
                        <MenuItem Header="{l:Loc Key='Main_AutoPosition'}" IsCheckable="True" 
                                  IsChecked="{Binding DockVM.PreviewAutoPosition}"/>
                        <my:RadioMenuItem Header="{l:Loc Key='Main_DockRight'}" GroupName="D1" 
                                  IsChecked="{Binding DockVM.PreviewDockSide, 
                                        Converter={StaticResource ebc}, ConverterParameter=Right}"/>
                        <my:RadioMenuItem Header="{l:Loc Key='Main_DockBottom'}" GroupName="D1" 
                                  IsChecked="{Binding DockVM.PreviewDockSide, 
                                        Converter={StaticResource ebc}, ConverterParameter=Bottom}"/>
                    </ContextMenu>
                </ae:TextEditor.ContextMenu>
            </ae:TextEditor>
        </DockPanel>
    </Border>
</UserControl>
