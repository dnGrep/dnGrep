<my:ThemedWindow x:Class="dnGREP.WPF.TestPattern"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:my="clr-namespace:dnGREP.WPF"
                 Title="Test"
                 FontFamily="{Binding ApplicationFontFamily}"
                 FontSize="{Binding DialogFontSize}"
                 SizeToContent="Height"
                 Width="600" MinHeight="460"
                 WindowStyle="SingleBorderWindow"
                 Icon="/dnGREP;component/nGREP.ico"
                 Background="{DynamicResource Dialog.Background}"
                 CaptionBackground="{DynamicResource Caption.Dialog.Background}"
                 Closing="Window_Closing"
                 KeyDown="FormKeyDown"
                 SnapsToDevicePixels="True"
                 ResizeMode="CanResizeWithGrip">
    <!--  Resources  -->
    <Window.Resources>
        <Style x:Key="ExpandedTextbox"
               TargetType="{x:Type TextBox}"
               BasedOn="{StaticResource ThemedTextBox}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Multiline}" Value="True">
                    <Setter Property="MinHeight" Value="50" />
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <Setter Property="AcceptsReturn" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Multiline}" Value="False">
                    <Setter Property="TextWrapping" Value="NoWrap" />
                    <Setter Property="AcceptsReturn" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ThemedContextMenu}">
            <Setter Property="FontFamily" Value="{Binding ApplicationFontFamily}"/>
            <Setter Property="FontSize" Value="{Binding DialogFontSize}"/>
        </Style>

        <my:EnumBooleanConverter x:Key="ebc" />
        <my:StringNotNullOrEmptyConverter x:Key="notNullOrEmpty" />
        <my:ValidationColorConverter x:Key="validationColor" />
        <my:BoolToVisibilityConverter x:Key="boolToVis" TrueValue="Visible" FalseValue="Collapsed" />
    </Window.Resources>

    <DockPanel>
        <StackPanel Margin="3" DockPanel.Dock="Top">
            <GroupBox Header="Search">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                        <RadioButton Content="Regex" Margin="3,4,3,3" GroupName="SearchRegex"
                                     IsChecked="{Binding Path=TypeOfSearch, Converter={StaticResource ebc}, 
                                        ConverterParameter=Regex}"/>
                        <RadioButton Content="XPath" Margin="3,4,3,3" GroupName="SearchXPath"
                                     IsChecked="{Binding Path=TypeOfSearch, Converter={StaticResource ebc}, 
                                        ConverterParameter=XPath}"/>
                        <RadioButton Content="Text" Margin="3,4,3,3" GroupName="SearchText"
                                     IsChecked="{Binding Path=TypeOfSearch, Converter={StaticResource ebc}, 
                                        ConverterParameter=PlainText}"/>
                        <RadioButton Content="Phonetic" Margin="3,4,3,3" GroupName="SearchSoundex"
                                     IsChecked="{Binding Path=TypeOfSearch, Converter={StaticResource ebc}, 
                                        ConverterParameter=Soundex}"/>
                    </StackPanel>
                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Border Background="#12FFFFFF" CornerRadius="3" 
                                Visibility="{Binding HasValidationMessage, Converter={StaticResource boolToVis}}">
                            <Label HorizontalAlignment="Center" Padding="12,3" FontWeight="SemiBold"
                                   Content="{Binding ValidationMessage}"
                                   Foreground="{Binding IsValidPattern, Converter={StaticResource validationColor}}"
                                   Background="Transparent">
                            </Label>
                        </Border>
                    </StackPanel>
                    <GroupBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                              Header="Search for:" BorderThickness="0">
                        <TextBox Margin="-5,3,-5,0"
                                 Text="{Binding Path=SearchFor, UpdateSourceTrigger=PropertyChanged}"
                                 VerticalScrollBarVisibility="Auto"
                                 Style="{StaticResource ExpandedTextbox}">
                            <TextBox.ToolTip>
                                <TextBlock>
                                    <Run>. matches all characters</Run>
                                    <LineBreak />
                                    <Run>\w matches alpha-numerics</Run>
                                    <LineBreak />
                                    <Run>\d matches digits</Run>
                                    <LineBreak />
                                    <Run>\s matches space</Run>
                                    <LineBreak />
                                    <Run>* matches any number of characters</Run>
                                    <LineBreak />
                                    <Run>{1,3} matches 1 to 3 characters</Run>
                                    <LineBreak />
                                    <Run>For more Regex patterns hit F1</Run>
                                </TextBlock>
                            </TextBox.ToolTip>
                        </TextBox>
                    </GroupBox>
                    <GroupBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                              Header="Replace with:" BorderThickness="0">
                        <TextBox Margin="-5,3,-5,0"
                                 Text="{Binding Path=ReplaceWith, UpdateSourceTrigger=PropertyChanged}"
                                 VerticalScrollBarVisibility="Auto"
                                 Style="{StaticResource ExpandedTextbox}">
                            <TextBox.ToolTip>
                                <TextBlock>
                                    <Run><![CDATA[$& replaces entire regex]]></Run>
                                    <LineBreak />
                                    <Run><![CDATA[$1, $2, $3, etc... inserts the text matched between capturing parentheses into the replacement text]]></Run>
                                    <LineBreak />
                                    <Run><![CDATA[$$ inserts a single dollar sign into the replacement text]]></Run>
                                </TextBlock>
                            </TextBox.ToolTip>
                        </TextBox>
                    </GroupBox>
                    <UniformGrid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="8,0,0,0" Rows="2">
                        <CheckBox Content="Case sensitive" Margin="3,4,3,3" 
                                    IsChecked="{Binding Path=CaseSensitive}"
                                    IsEnabled="{Binding Path=IsCaseSensitiveEnabled}"/>
                        <CheckBox Content="Whole word" Margin="3,4,3,3" 
                                    IsChecked="{Binding Path=WholeWord}"
                                    IsEnabled="{Binding Path=IsWholeWordEnabled}"/>
                        <CheckBox Content="Multiline" Margin="3,4,3,3" 
                                    IsChecked="{Binding Path=Multiline}"
                                    IsEnabled="{Binding Path=IsMultilineEnabled}"/>
                        <CheckBox Content="Dot as newline" Margin="3,4,3,3" 
                                    IsChecked="{Binding Path=Singleline}"
                                    IsEnabled="{Binding Path=IsSinglelineEnabled}"/>
                        <CheckBox Content="Boolean operators" Margin="3,4,3,3" 
                                    IsChecked="{Binding Path=BooleanOperators}"
                                    IsEnabled="{Binding Path=IsBooleanOperatorsEnabled}"/>
                        <CheckBox Content="Highlight Groups" Margin="3,4,3,3"                                  
                                    IsChecked="{Binding HighlightCaptureGroups}"
                                    IsEnabled="{Binding Path=IsHighlightGroupsEnabled}" />
                    </UniformGrid>
                </Grid>
            </GroupBox>
        </StackPanel>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel Grid.Row="0" LastChildFill="True">
                <Label DockPanel.Dock="Top" Content="Sample input text:"/>
                <TextBox MinHeight="60"
                         Margin="5" AcceptsReturn="True" TextWrapping="Wrap"
                         VerticalScrollBarVisibility="Auto"
                         FontFamily="Consolas"
                         Text="{Binding Path=SampleText, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>
            <GridSplitter Grid.Row="1" Height="2" Background="{DynamicResource Splitter.Background}" 
                          Margin="8,0" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
            <DockPanel Grid.Row="2" LastChildFill="True">
                <Label DockPanel.Dock="Top" Content="Search result:" />
                <Border Margin="5"
                        BorderBrush="{DynamicResource Control.Static.Border}"
                        BorderThickness="1"
                        Background="{DynamicResource Control.Static.Background}">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <my:InlineTextBlock Margin="3,0,0,0" MinHeight="60"
                                            HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                            InlineCollection="{Binding SearchOutput}"
                                            FontFamily="Consolas"
                                            Style="{StaticResource ThemedTextBlock}" />
                    </ScrollViewer>
                </Border>
            </DockPanel>
            <GridSplitter Grid.Row="3" Height="2" Background="{DynamicResource Splitter.Background}" 
                          Margin="8,0" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
            <DockPanel Grid.Row="4" LastChildFill="True">
                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                    <Label Content="Replace result:"/>
                    <Label Content="{Binding Path=ReplaceErrorText}" Margin="20,0,0,0" 
                           FontWeight="SemiBold" Foreground="Red"/>
                </StackPanel>
                <Border Margin="5"
                        BorderBrush="{DynamicResource Control.Static.Border}"
                        BorderThickness="1"
                        Background="{DynamicResource Control.Static.Background}">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <my:InlineTextBlock Margin="3,0,0,0" MinHeight="60"
                                            HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                            InlineCollection="{Binding ReplaceOutput}"
                                            FontFamily="Consolas"
                                            Style="{StaticResource ThemedTextBlock}" />
                    </ScrollViewer>
                    <Border.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Copy to clipboard" Click="BtnCopyFile_Click"
                                      IsEnabled="{Binding ReplaceOutputText, Converter={StaticResource notNullOrEmpty}}" />
                        </ContextMenu>
                    </Border.ContextMenu>
                </Border>
            </DockPanel>
            <StackPanel Grid.Row="5" Margin="0,0,3,0" HorizontalAlignment="Right" Orientation="Horizontal">
                <Button Margin="3" Padding="20,3" Content="Close"
                        Click="BtnClose_Click" IsCancel="True" />
            </StackPanel>
        </Grid>
    </DockPanel>
</my:ThemedWindow>
